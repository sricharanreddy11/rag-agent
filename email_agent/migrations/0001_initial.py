# Generated by Django 5.2.1 on 2025-05-28 11:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MailToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('provider', models.CharField(max_length=50)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('expires_at', models.DateTimeField(null=True)),
                ('meta', models.JSONField(default=dict)),
                ('token_type', models.CharField(default='EMAIL', max_length=50)),
                ('status', models.CharField(default='ACTIVE', max_length=20)),
                ('is_primary', models.BooleanField(default=False)),
                ('last_sync_time', models.DateTimeField(null=True)),
                ('last_connected_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'mail_token',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('thread_id', models.CharField(max_length=255, unique=True)),
                ('subject', models.TextField()),
                ('participants', models.JSONField(default=dict)),
                ('sender', models.EmailField(max_length=254)),
                ('thread_owner', models.EmailField(max_length=254)),
                ('is_sent', models.BooleanField(default=False)),
                ('is_inbox', models.BooleanField(default=False)),
                ('last_active_time', models.DateTimeField()),
                ('size', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'email_thread',
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('message_id', models.CharField(max_length=255, unique=True)),
                ('in_reply_to', models.CharField(blank=True, max_length=255, null=True)),
                ('sender', models.EmailField(max_length=254)),
                ('recipients', models.JSONField()),
                ('cc', models.JSONField(blank=True, null=True)),
                ('bcc', models.JSONField(blank=True, null=True)),
                ('subject', models.TextField()),
                ('body_html', models.TextField()),
                ('body_plain', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(blank=True, null=True)),
                ('received_at', models.DateTimeField()),
                ('mail_status', models.CharField(default='RECEIVED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='email_agent.thread')),
            ],
            options={
                'db_table': 'email_message',
            },
        ),
    ]
